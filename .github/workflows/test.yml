name: Terraform Test Workflow

on:
  workflow_dispatch:
    inputs:
      account:
        description: 'Account number (e.g., 1, 2, 3)'
        required: true
      module:
        description: 'Module name (e.g., some module)'
        required: true

env:
      AWS_REGION: 'us-west-2'
      TF_VERSION: '1.4.0'
      TFLINT_VERSION: '0.46.1'  # Updated to a more recent version
      TFSEC_VERSION: '1.28.1'   # Updated to a more recent version
      
permissions:
  contents: write
  pull-requests: write

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # with:
        #   fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Install TFLint'
        run: |
          curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
          unzip tflint.zip -d /usr/local/bin/
          tflint --version

      - name: 'Install TFSec'
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
          chmod +x tfsec
          mv tfsec /usr/local/bin/
          tfsec --version


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Navigate to the Correct Module Directory
        run: |
          MODULE_PATH="account-${{ github.event.inputs.account }}/${{ github.event.inputs.module }}"
          echo "MODULE_PATH=$MODULE_PATH" >> $GITHUB_ENV
          if [ ! -d "$MODULE_PATH" ]; then
            echo "Error: Directory $MODULE_PATH does not exist!"
            exit 1
          fi

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.MODULE_PATH }}

      - name: Run TFLint
        working-directory: ${{ env.MODULE_PATH }}
        run: |
          tflint
      
      - name: Run TFSEC
        working-directory: ${{ env.MODULE_PATH }}
        run: |
          tfsec .
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ${{ env.MODULE_PATH }}
        id: plan



      - name: Comment on PR
        if: github.event_name == 'pull_request' && success()
        uses: actions/github-script@v7
        with:
          script: |
            const output = `Terraform Plan for \`${{ matrix.folder }}\` was successful âœ…`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      # - name: Merge PR if Plan Succeeds
      #   if: github.event_name == 'pull_request' && success()
      #   uses: pascalgn/automerge-action@v0.15.6
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     MERGE_METHOD: squash